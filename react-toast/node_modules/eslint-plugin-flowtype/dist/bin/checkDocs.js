#!/usr/bin/env node
// @flow
"use strict";

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _utilities = require("./utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const windows = (array, size) => {
  const output = [];

  for (let ii = 0; ii < array.length - size + 1; ii++) {
    output.push(array.slice(ii, ii + size));
  }

  return output;
};

const getDocIndexRules = () => {
  const content = _fs.default.readFileSync(_path.default.resolve(__dirname, '../../.README/README.md'), 'utf-8');

  const rules = content.split('\n').map(line => {
    const match = /^{"gitdown": "include", "file": "([^"]+)"}$/u.exec(line);

    if (match === null) {
      return null;
    }

    return match[1].replace('./rules/', '').replace('.md', '');
  }).filter(rule => {
    return rule !== null;
  });

  if (rules.length === 0) {
    throw new Error('Docs checker is broken - it could not extract rules from